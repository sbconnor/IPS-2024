[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introduction to Probability and Statistics",
    "section": "",
    "text": "Overview\nWelcome to IPS!\nThis web site is used to provide some of the course materials, and should be used alongside the module’s VLE page. All of the written assignment submission points can be found on the VLE, along with the quizzes for completion as you work through the computer labs.\nYou only need to use this site to access the computer lab material. However, you will also be able to access copies of the written assignments here in html format, in case you find that more accessible than the pdf files which will be available on the VLE.\n\n\n\n\n\n\nNote\n\n\n\nYou can access the pdf version of any page of this site by clicking on the pdf icon in the left-hand menu. You can also choose to view the page in dark mode, if that’s more comfortable.",
    "crumbs": [
      "Overview"
    ]
  },
  {
    "objectID": "labs/labs.html",
    "href": "labs/labs.html",
    "title": "Computer labs",
    "section": "",
    "text": "Assessment\nThe Intro lab does not count for credit, but you should attempt this in the first week of the semester to make sure that:",
    "crumbs": [
      "Computer labs"
    ]
  },
  {
    "objectID": "labs/labs.html#assessment",
    "href": "labs/labs.html#assessment",
    "title": "Computer labs",
    "section": "",
    "text": "Important\n\n\n\nThe five main labs (imaginatively named “Lab 1” to “Lab 5”) count for credit: your best 4 out of 5 will marks will count for 20% of the module mark.\nEach lab will have an accompanying quiz. As you work through each lab you will find places where you are asked to perform a calculation and then enter your mark in the appropriate quiz.\nYou can have two attempts at each quiz; the mark from your best attempt will become your final grade for that lab.\n\n\n\n\nyou can successfully access R\nyou know how to enter answers in the accompanying quiz.",
    "crumbs": [
      "Computer labs"
    ]
  },
  {
    "objectID": "labs/intro-lab.html",
    "href": "labs/intro-lab.html",
    "title": "Intro Lab: Meeting R and RStudio",
    "section": "",
    "text": "The data: Dr. Arbuthnot’s baptism records\nThe Arbuthnot data set was compiled by Dr. John Arbuthnot, an 18th century physician, writer, and mathematician. He was interested in the ratio of newborn boys to newborn girls, so he gathered the baptism records for children born in London for every year from 1629 to 1710. We can take a look at the data by typing its name into the console and hitting Enter.\narbuthnot\nWhat you should see are four columns of numbers, each row representing a different year: the first entry in each row is simply the row number (an index we can use to access the data from individual years if we want), the second is the year, and the third and fourth are the numbers of boys and girls baptised that year, respectively. Use the scroll bar on the right side of the console window to examine the complete data set.\nMoving back to the console, if we only want to see the first few lines of the data set, we can type\nhead(arbuthnot)\n#&gt;   year boys girls\n#&gt; 1 1629 5218  4683\n#&gt; 2 1630 4858  4457\n#&gt; 3 1631 4422  4102\n#&gt; 4 1632 4994  4590\n#&gt; 5 1633 5158  4839\n#&gt; 6 1634 5035  4820\nSometimes, as in this example, I’ll show you the output of the commands when I run them on my computer, so that you can compare with what you get when you run the commands yourself: any line starting with #&gt; corresponds to code output.\nNote that the row numbers in the first column are not part of Arbuthnot’s data. R adds them as part of its printout to help you make visual comparisons. You can think of them as the index that you see on the left side of a spreadsheet. In fact, the comparison to a spreadsheet will generally be helpful. R has stored Arbuthnot’s data in a kind of spreadsheet or table called a data frame.\nYou can see the dimensions of this data frame by typing:\ndim(arbuthnot)\n#&gt; [1] 82  3\nThis indicates that there are 82 rows and 3 columns (we’ll get to what the [1] means in a bit), just as it says next to the object in your Environment tab. You can see the names of these columns (or variables) by typing:\nnames(arbuthnot) \n#&gt; [1] \"year\"  \"boys\"  \"girls\"\nYou should see that the data frame contains the columns year, boys, and girls. By this point, you might have noticed that many of the commands in R look a lot like functions; that is, invoking R commands means supplying a function with some number of arguments. The dim() and names() commands, for example, each took a single argument, the name of a data frame.",
    "crumbs": [
      "Computer labs",
      "Intro Lab: Meeting R and RStudio"
    ]
  },
  {
    "objectID": "labs/intro-lab.html#the-data-dr.-arbuthnots-baptism-records",
    "href": "labs/intro-lab.html#the-data-dr.-arbuthnots-baptism-records",
    "title": "Intro Lab: Meeting R and RStudio",
    "section": "",
    "text": "Tip\n\n\n\nA nice feature of RStudio is that it comes with a built-in data viewer. Click on the name arbuthnot in the upper right window that lists the objects in your environment. This will bring up an alternative display of the Arbuthnot counts in the upper left panel of the RStudio window.\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nIn the html version of this document, the word head() in the code block above is underlined (as is the command source() further up the page). Clicking on an R command which is underlined will take you to its online documentation, where you can read more about how to use it.",
    "crumbs": [
      "Computer labs",
      "Intro Lab: Meeting R and RStudio"
    ]
  },
  {
    "objectID": "labs/intro-lab.html#some-exploration",
    "href": "labs/intro-lab.html#some-exploration",
    "title": "Intro Lab: Meeting R and RStudio",
    "section": "Some exploration",
    "text": "Some exploration\nLet’s start to examine the data a little more closely. We can access the data in a single column of a data frame separately using a command like\n\narbuthnot$boys\n\nThis command will only show the number of boys baptised each year.\n\n\n\n\n\n\nYour turn\n\n\n\nWhat command would you use to extract just the counts of girls baptised each year? Try it!Now answer quiz question 1.\n\n\nNotice that the way R has printed these data is different. When we looked at the complete data frame, we saw 82 rows, one on each line of the display. These data are no longer structured in a table with other variables, so they are displayed one right after another.\nObjects that print out in this way are called vectors; they represent a set of numbers. R has added numbers in [brackets] along the left side of the printout to indicate locations within the vector. For example, 5218 follows [1], indicating that 5218 is the first entry in the vector. And if [43] starts a line, then that would mean the first number on that line would represent the 43rd entry in the vector.\nR has some powerful functions for making graphics. We can create a simple plot of the number of girls baptised per year with the command\n\nplot(x = arbuthnot$year, y = arbuthnot$girls) \n\n\n\n\n\n\n\nBy default, R creates a scatterplot with each (x,y) pair indicated by an open circle. The plot itself should appear under the Plots tab of the lower right panel of RStudio.\nNotice that the command above again looks like a function, this time with two arguments separated by a comma. The first argument in the plot function specifies the variable for the x-axis and the second for the y-axis. If we wanted to connect the data points with lines, we could add a third argument, the letter l for line.\n\nplot(x = arbuthnot$year, y = arbuthnot$girls, type = \"l\")\n\n\n\n\n\n\n\nYou might wonder how you are supposed to know that it was possible to add that third argument. Thankfully, R documents all of its functions extensively: you’ve already seen that clicking on any of the underlined commands in this page takes you to the relevant entry in the documentation. Another way to read what a function does, and learn the arguments that are available to you, is to just type in a question mark followed by the name of the function that you’re interested in. Try the following.\n\n?plot\n\nCan you figure out how to produce a plot that shows both the points and the lines connecting them?\nNotice that the help file replaces the plot in the lower right panel. You can toggle between plots and help files using the tabs at the top of that panel.\n\n\n\n\n\n\nYour turn\n\n\n\nIs there an apparent trend in the number of girls baptised over the years?Answer quiz question 2.\nCan you also guess, just by looking at the graph, when the English civil war started?\n\n\nNow, suppose we want to plot the total number of baptisms. To compute this, we could use the fact that R is really just a big calculator. We can type in mathematical expressions like\n\n5218 + 4683\n\nto see the total number of baptisms in 1629. We could repeat this once for each year, but there is a faster way. If we add the vector for baptisms for boys and girls, R will compute all sums simultaneously.\n\narbuthnot$boys + arbuthnot$girls\n\nWhat you will see are 82 numbers (in that packed display, because we aren’t looking at a data frame here), each one representing the sum we’re after. Take a look at a few of them and verify that they are right.\nWe can now make a plot of the total number of baptisms per year with the command\n\nplot(arbuthnot$year, arbuthnot$boys + arbuthnot$girls, type = \"l\")\n\nThis time, note that we left out the names of the first two arguments. We can do this because the help file shows that the default for plot is for the first argument to be the x-variable and the second argument to be the y-variable.\nNext we calculate the proportion of the baptised children that are boys. We can do this for the year 1629 with the command\n\n5218 / (5218 + 4683)\n\nbut this may also be computed for all years simultaneously:\n\narbuthnot$boys / (arbuthnot$boys + arbuthnot$girls)\n\nNote that with R, as with your calculator, you need to be conscious of the order of operations. Here, we want to divide the number of boys by the total number of newborns, so we have to use parentheses. Without them, R will first do the division, then the addition, giving you something that is not a proportion.\n\n\n\n\n\n\nYour turn\n\n\n\nNow, make a plot of the proportion of boys over time. The command for making the plot will be similar to the plot command you used earlier, just with a different expression for the y argument.Now answer quiz question 3.\n\n\n\n\n\n\n\n\nTip\n\n\n\nIf you use the up and down arrow keys, you can scroll through your previous commands, your so-called command history. You can also access it by clicking on the History tab in the upper right panel. This will save you a lot of typing in the future.\n\n\nIn addition to simple mathematical operators like subtraction and division, you can ask R to make comparisons like greater than, &gt;, less than, &lt;, and equality, == (note that it has to be a double equal sign, not a single equal sign). For example, we can ask if boys outnumber girls in each year with the expression\n\narbuthnot$boys &gt; arbuthnot$girls\n\nThis command returns 82 values of either TRUE if that year had more boys than girls, or FALSE if that year did not (the answer may surprise you). This output shows a different kind of data than we have considered so far. In the arbuthnot data frame our values are numerical (the year, the number of boys and girls). Here, we’ve asked R to create logical data, data where the values are either TRUE or FALSE. In general, data analysis will involve many different kinds of data types, and one reason for using R is that it is able to represent and compute with many of them.\nYou can count the number of entries for which the condition is TRUE by just summing the entries in the vector\n\nsum(arbuthnot$boys &gt; arbuthnot$girls)\n\nThe reason this works is that R automatically converts TRUE to 1 and FALSE to 0 when asked to do a numerical calculation with these values.\n\n\n\n\n\n\nYour turn\n\n\n\nAbove you have seen how to calculate the proportion of newborns that are boys. You have also learned how to count the number of entries in the data that satisfy a particular condition.Now combine those two to answer quiz question 4.",
    "crumbs": [
      "Computer labs",
      "Intro Lab: Meeting R and RStudio"
    ]
  },
  {
    "objectID": "labs/intro-lab.html#a-newer-data-set",
    "href": "labs/intro-lab.html#a-newer-data-set",
    "title": "Intro Lab: Meeting R and RStudio",
    "section": "A newer data set",
    "text": "A newer data set\nIn the previous few pages, you recreated some of the displays and preliminary analysis of Arbuthnot’s baptism data. To practise your new skills, you will now repeat these steps, but for present day birth records in the United States. Load up the present day data with the following command.\n\nsource(\"http://www.openintro.org/stat/data/present.R\") \n\nThe data are stored in a data frame called present.\n\n\n\n\n\n\nYour turn\n\n\n\n\nWhat years are included in this data set? What are the dimensions of the data frame and what are the variable or column names?\nHow do these counts compare to Arbuthnot’s? Are they on a similar scale?\nDoes Arbuthnot’s observation about boys being born in greater proportion than girls hold up in the U.S.?\nMake a plot that displays the boy-to-girl ratio for every year in the data set. What do you see?\nWhat was the largest total number of births in a single year in the U.S. during the period covered by the dataset? You can refer to the help files or the R reference card to find helpful commands.\n\nNow answer questions 5 and 6 in the quiz.\n\n\nThese data come from a report by the Centers for Disease Control. Check it out if you would like to read more about an analysis of sex ratios at birth in the United States.\nTo exit RStudio you can click the cross in the upper right corner of the whole window. You will be prompted to save your workspace. If you click save, RStudio will save the history of your commands and all the objects in your workspace so that the next time you launch RStudio, you will see arbuthnot and you will have access to the commands you typed in your previous session.",
    "crumbs": [
      "Computer labs",
      "Intro Lab: Meeting R and RStudio"
    ]
  }
]